/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.5/samples
 */

plugins {
	id 'java'
    id 'application'
	id 'jacoco'
	id 'info.solidsoft.pitest' version '1.19.0-rc.2'
}

repositories {
	mavenCentral()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

//mainClassName = ''

dependencies {
	testImplementation(platform('org.junit:junit-bom:5.10.2'))
	testImplementation('org.junit.jupiter:junit-jupiter')
	testRuntimeOnly('org.junit.platform:junit-platform-launcher')
	testImplementation("org.assertj:assertj-core:3.27.3")

	// Cucumber
	testImplementation('org.junit.platform:junit-platform-suite:1.10.2')
	testImplementation('io.cucumber:cucumber-java:7.14.0')
	testImplementation('io.cucumber:cucumber-junit-platform-engine:7.14.0')
	testImplementation('io.cucumber:cucumber-expressions:17.0.1')
}

test {
	useJUnitPlatform {
		testLogging {
			events "passed", "skipped", "failed"
      exceptionFormat "full"
		}
	}
}

javadoc {
	source = sourceSets.main.allJava
	options.tags = [ 'pre:a:Pre:', 'post:a:Post:']
	destinationDir = file('docs')
}


task cleanDocs(type: Delete) {
	delete 'docs'
}

clean.dependsOn cleanDocs


run {
	standardInput = System.in
}

jacocoTestReport {
	dependsOn test
}

pitest {
	junit5PluginVersion = '1.2.3'
	targetClasses = ['mutation.ejercicio4.*']
//	pitestVersion = '1.20.3'
	threads = 4
	outputFormats = ['XML', 'HTML']
	timestampedReports = false
}

/*
// Make build fail if tests don't cover enough code
jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'INSTRUCTION'
                minimum = 0.87
            }
            limit {
                counter = 'BRANCH'
                minimum = 0.80
            }
        }
    }
}

check.dependsOn jacocoTestCoverageVerification

build.dependsOn 'pitest'
*/

